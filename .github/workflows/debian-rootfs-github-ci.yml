# This is a basic workflow to help you get started with Actions

name: debian-rootfs GitHub CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      codename:
        description: "Debian codename"
        required: true
        default: "bullseye"
      
      arch:
        description: "Debian Architecture"
        required: true
        default: "amd64"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Etc/GMT

      - name: Get current time
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYY-MM-DD-HH-mm-ss
        
      - name: Set arch for qemu
        id: arch
        run: |
          ARCH=${{ github.event.inputs.arch }}
          if [ "$ARCH" == "amd64" ]
          then
             ARCH=x86_64
          elif [ "$ARCH" == "arm64" ]
          then
             ARCH=aarch64
          else
             ARCH=${{ github.event.inputs.arch }}
          fi
          echo "ARCH=$ARCH" >> $GITHUB_ENV

      # Initial Setup
      - name: Initial Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap qemu qemu-user qemu-user-static binfmt-support binutils wget debian-archive-keyring
          sudo modprobe binfmt_misc
          sudo apt-key add /usr/share/keyrings/debian-archive-keyring.gpg

      # Runs a set of commands using the runners shell
      - name: First part - Download and Install core packages
        run: |
          mkdir debian-rootfs-${{ steps.current-time.outputs.formattedTime }}
          sudo debootstrap --foreign --arch ${{ github.event.inputs.arch }} --keyring /usr/share/keyrings/debian-archive-keyring.gpg ${{ github.event.inputs.codename }} ./debian-rootfs-${{ steps.current-time.outputs.formattedTime }}
          
      - name: Second part of the setup
        run: |
          sudo cp /usr/bin/qemu-$ARCH-static ./debian-rootfs-${{ steps.current-time.outputs.formattedTime }}/usr/bin
          LANG=C.UTF-8 HOME=/root sudo chroot debian-rootfs-${{ steps.current-time.outputs.formattedTime }} /usr/bin/qemu-$ARCH-static /bin/bash 
          
          cd ~
          ln -sf bash /bin/sh
          ln -sf bash.1.gz /usr/share/man/man1/sh.1.gz
          /debootstrap/debootstrap --second-stage 
          
          sed -i "s/^root:[^:]\+:/root::/" /etc/shadow
          echo "unknown" > /etc/hostname
          echo -e "127.0.0.1    localhost \n127.0.1.1    unknown\n" > /etc/hosts
 
          ln -sf ../run/resolvconf/resolv.conf /etc/resolv.conf
          apt-get clean
          history -c
          logout
          
      - name: Archive the rootfs
        run: sudo tar -cpvzf debian-rootfs-${{ steps.current-time.outputs.formattedTime }}.tar.gz debian-rootfs-${{ steps.current-time.outputs.formattedTime }}
          
      - name: Upload debian-rootfs
        uses: actions/upload-artifact@v2
        with:
          name: debian-rootfs-${{ steps.current-time.outputs.formattedTime }}
          path: debian-rootfs-${{ steps.current-time.outputs.formattedTime }}.tar.gz
          
